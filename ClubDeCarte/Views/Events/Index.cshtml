@model PagedList.IPagedList<ClubDeCarte.Models.Event>
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}
<link href="@Url.Content("~/Content/Events.css")" rel="stylesheet" type="text/css" />
<h2>Index</h2>

<p>
    @Html.ActionLink("Create an Event", "Create", "Events", null, new { @class = "btn btn-primary" })
</p>

@using (Html.BeginForm())
{
    <p>
        Search your favorite event: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
<table class="table table-hover">
    <tr>
        <th>
            @Html.ActionLink("Event description", "Index", new { sortOrder = ViewBag.EventSortParm })
        </th>
        <th>
            Event Location
        </th>
        <th>
            @Html.ActionLink("Event day", "Index", new { sortOrder = ViewBag.DateSortParm })
        </th>
        <th>
            Added By
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
     {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.EventDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EventLocation)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EventDay)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AddedBy)
            </td>
            <td>
                @Html.ActionLink("Details", "Details", "BookReviews", new { id = item.EventID }, new { @class = "btn btn-warning" })
                @{
                    if (User.IsInRole("Admin"))
                    {
                        @Html.ActionLink("Edit", "Edit", new { id = item.EventID })
                        @Html.ActionLink("Delete", "Delete", new { id = item.EventID })
                    }
                }
            </td>
        </tr>
     }

</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
